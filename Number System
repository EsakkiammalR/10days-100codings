1.binary to decimal
public class Main {
  public static void main(String args[]) {
    String s = "1011";
    int n = s.length();
    int base = 1;
    int ans = 0;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == '1') {
        ans += base;
      }
      base *= 2;
    }
    System.out.print(ans);
  }
}

2.decimal to binary
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a decimal number: ");
        int num = sc.nextInt();
        sc.close();

        String binary = "";
        while (num > 0) {
            int remainder = num % 2;  // Get the remainder (0 or 1)
            binary = remainder + binary;  // Append remainder at the front
            num = num / 2;  // Reduce the number
        }

        System.out.println("Binary equivalent: " + binary);
    }
}

3.binary to oct
public class Main {
  public static void main(String args[]) {
    String s = "1100110";
    int n = s.length();
    //adding appropriate "0" to the left of
    //string to make the length divisible by 3.
    if (n % 3 == 1) {
      s = "00" + s;
    } else if (n % 3 == 2) {
      s = "0" + s;
    }
    n = s.length();
    String ans = "";
    for (int i = 0; i < n; i += 3) {
      int temp = (s.charAt(i) - '0') * 4 + (s.charAt(i + 1) - '0') * 2 + (s.charAt(i + 2) - '0') * 1;
      ans = ans + Integer.toString(temp);
    }
    System.out.print(ans);
  }
}

4.oct to binary
import java.util.*;
public class Main {
  public static int DecimaltoBinary(int decimal) {
    int Binary = 0;
    int i = 0;
    while (decimal != 0) {
      int rem = decimal % 2;
      Binary += (rem * Math.pow(10, i));
      i++;
      decimal = decimal / 2;
    }
    return Binary;
  }
  public static int OctaltoDecimal(int Octal) {
    int Decimal = 0;
    int i = 0;
    while (Octal != 0) {
      int rem = Octal % 10;
      Decimal += rem * Math.pow(8, i);
      i++;
      Octal /= 10;
    }
    return Decimal;
  }
  public static void main(String[] args) {
    int Octal = 345;
    int Decimal = OctaltoD.ecimal(Octal);
    System.out.println("The binary conversion of the given octal number is 
    "+DecimaltoBinary(Decimal));
  }
 
}

5.DecimaltoOctal
public class Main {
  public static int DecimaltoOctal(int Decimal) {
    int i = 0;
    int Octal = 0;
    while (Decimal != 0) {
      int rem = Decimal % 8;
      Octal += rem * Math.pow(10, i);
      i++;
      Decimal /= 8;
    }
    return Octal;
  }
  public static void main(String[] args) {
    int Decimal = 136;
    System.out.println("The Octal conversion of the given decimal number is 
    "+DecimaltoOctal(Decimal));
  }
}

6.oct to dec
import java.util.*;
public class Main {
  public static int OctaltoDecimal(int Octal) {
    int Decimal = 0;
    int i = 0;
    while (Octal != 0) {
      int rem = Octal % 10;
      Decimal += rem * Math.pow(8, i);
      i++;
      Octal /= 10;
    }
    return Decimal;
  }
  public static void main(String[] args) {
    int Octal = 345;
    System.out.println("The decimal equivalent of the given octal number is 
    "+OctaltoDecimal(Octal));
  }
 
}

7.Convert digits/numbers to words
import java.util.*;
public class Main {
  public static void convertnumintoword(String str)
  {
      String []singledigit = new String[]{"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"};
  String []twodigits=new String[] {"ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "ninteen", "twelve"};
  String []tensmultiple = new String[]{"", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninty"};
  String []tenspower =new String[] {"hundred", "thousand"};
  if(str.length()==0)
  {
      System.out.println("");
      return;
  }
  else if(str.length()==1)
  {
      System.out.println(str.charAt(0)-'0');
      return;
  }

  int len=str.length();

  for(int i=0;i<str.length();i++)
  {
      if(len>2)
      {
          if(str.charAt(i)-'0'!=0)
          {
              System.out.print(singledigit[str.charAt(i)-'0']+" ");
              System.out.print(tenspower[len-3]+" ");
          }
          len--;
      }
      else
      {
          if(str.charAt(i)-'0'==1)
          {
              System.out.print(twodigits[str.charAt(i+1)-'0']+" ");
              return;
          }
          else if(str.charAt(i)-'0'!=0)
          {
              System.out.print(tensmultiple[str.charAt(i)-'0']+" ");
              if(str.charAt(i+1)-'0'!=0)
              System.out.print(singledigit[str.charAt(i+1)-'0']);
              return;
          }
      }
  }
  }

  public static void main(String args[]) {
    String str="9090";
    convertnumintoword(str);
  }
}

